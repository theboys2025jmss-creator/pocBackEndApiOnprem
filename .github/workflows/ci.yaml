name: CI

on:
  push:
    branches: ["**"] # corre en todas las ramas
    tags: ["v*"] # y también en tags
  pull_request: # también en PRs

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality Gate (lint/type/style/tests)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: "3.11"

      - name: Install dev deps
        run: pdm install -G dev

      - name: Ruff (lint)
        run: pdm run ruff check .

      - name: Ruff (format check)
        run: pdm run ruff format --check .

      - name: Pylint (camelCase, naming, etc.)
        run: pdm run pylint src

      - name: Mypy (type check)
        run: pdm run mypy src

      - name: Pytest (unit tests)
        run: pdm run pytest -q --maxfail=1 --disable-warnings --cov=src --cov-report=term-missing

  docker:
    name: Build & Push Docker
    needs: quality
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    steps:
      - uses: actions/checkout@v4

      - name: Debug GitHub context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Ref type: ${{ github.ref_type }}"
          echo "Ref name: ${{ github.ref_name }}"
          echo "SHA: ${{ github.sha }}"

      - name: Docker login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version/tag
        id: vars
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            TAG="${{ github.ref_name }}"
            TAG="${TAG#v}"  # Remove 'v' prefix if present
          else
            TAG="main-${{ github.sha }}"
            TAG="${TAG::12}"  # Truncate to 12 chars
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Building with tag: $TAG"

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/api-onprem:${{ steps.vars.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/api-onprem:latest
